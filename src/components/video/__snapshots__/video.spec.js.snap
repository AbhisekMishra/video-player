// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Video render should render with all props 1`] = `
Video {
  "context": Object {},
  "props": Object {
    "classes": Object {},
    "link": "",
    "reRenderVideo": false,
  },
  "refs": Object {},
  "setState": [Function],
  "state": null,
  "updater": Updater {
    "_callbacks": Array [],
    "_renderer": ReactShallowRenderer {
      "_context": Object {},
      "_didScheduleRenderPhaseUpdate": false,
      "_dispatcher": Object {
        "readContext": [Function],
        "useCallback": [Function],
        "useContext": [Function],
        "useDebugValue": [Function],
        "useEffect": [Function],
        "useImperativeHandle": [Function],
        "useLayoutEffect": [Function],
        "useMemo": [Function],
        "useReducer": [Function],
        "useRef": [Function],
        "useState": [Function],
      },
      "_element": <Video
        classes={Object {}}
        link=""
        reRenderVideo={false}
      />,
      "_firstWorkInProgressHook": null,
      "_forcedUpdate": false,
      "_instance": [Circular],
      "_isReRender": false,
      "_newState": null,
      "_numberOfReRenders": 0,
      "_renderPhaseUpdates": null,
      "_rendered": <WithStyles(Grid)
        container={true}
        justify="center"
        spacing={24}
      >
        <WithStyles(Grid)
          item={true}
          md={6}
          sm={11}
          xs={11}
        >
          <ReactPlayer
            config={
              Object {
                "dailymotion": Object {
                  "params": Object {
                    "api": 1,
                    "endscreen-enable": false,
                  },
                  "preload": false,
                },
                "facebook": Object {
                  "appId": "1309697205772819",
                },
                "file": Object {
                  "attributes": Object {},
                  "dashVersion": "2.9.2",
                  "forceAudio": false,
                  "forceDASH": false,
                  "forceHLS": false,
                  "forceVideo": false,
                  "hlsOptions": Object {},
                  "hlsVersion": "0.10.1",
                  "tracks": Array [],
                },
                "mixcloud": Object {
                  "options": Object {
                    "hide_cover": 1,
                  },
                },
                "soundcloud": Object {
                  "options": Object {
                    "buying": false,
                    "download": false,
                    "liking": false,
                    "sharing": false,
                    "show_comments": false,
                    "show_playcount": false,
                    "visual": true,
                  },
                },
                "twitch": Object {
                  "options": Object {},
                },
                "vimeo": Object {
                  "playerOptions": Object {
                    "autopause": false,
                    "byline": false,
                    "portrait": false,
                    "title": false,
                  },
                  "preload": false,
                },
                "wistia": Object {
                  "options": Object {},
                },
                "youtube": Object {
                  "embedOptions": Object {},
                  "playerVars": Object {
                    "iv_load_policy": 3,
                    "modestbranding": 1,
                    "playsinline": 1,
                    "rel": 0,
                    "showinfo": 0,
                  },
                  "preload": false,
                },
              }
            }
            controls={true}
            height="360px"
            light={false}
            loop={false}
            muted={false}
            onBuffer={[Function]}
            onBufferEnd={[Function]}
            onDisablePIP={[Function]}
            onDuration={[Function]}
            onEnablePIP={[Function]}
            onEnded={[Function]}
            onError={[Function]}
            onPause={[Function]}
            onPlay={[Function]}
            onProgress={[Function]}
            onReady={[Function]}
            onSeek={[Function]}
            onStart={[Function]}
            pip={false}
            playbackRate={1}
            playing={true}
            playsinline={false}
            progressInterval={1000}
            style={Object {}}
            url=""
            volume={null}
            width="100%"
            wrapper="div"
          />
        </WithStyles(Grid)>
      </WithStyles(Grid)>,
      "_rendering": false,
      "_updater": [Circular],
      "_workInProgressHook": null,
    },
  },
}
`;
